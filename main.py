import os
import subprocess
import shutil
import sys
from colorama import init, Fore

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è colorama –¥–ª—è —Ä–∞—Å–∫—Ä–∞—à–∏–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
init(autoreset=True)

def print_ascii():
    print(Fore.RED + """
    ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£§‚°§‚†§‚†§‚†§‚£§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°§‚†û‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚¢¶‚£§‚†∂‚†¶‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚†û‚¢ã‚°Ω‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†É‚†Ä‚†Ä‚†ô‚¢∂‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†ü‚†Å‚†Ä‚†ò‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°Ä‚†Ä‚†Ä‚†â‚†ì‚†¶‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£∑‚°Ñ‚†Ä‚†Ä‚¢ª‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£Ü‚†Ä
‚†Ä‚†Ä‚£†‚†û‚†Å‚†Ä‚†Ä‚£Ä‚£†‚£è‚°Ä‚†Ä‚¢†‚£∂‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚†ø‚°É‚†Ä‚†Ä‚†Ñ‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°Ü         Iphone_Parser
‚¢Ä‚°û‚†Å‚†Ä‚£†‚†∂‚†õ‚†â‚†â‚†â‚†ô‚¢¶‚°∏‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚°Ñ‚¢Ä‚£Ä‚£Ä‚°∂‚†Ä‚†Ä‚†Ä‚¢Ä‚°Ñ‚£Ä‚†Ä‚£¢‚†ü‚¢¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†É        creator: ‚ô°ùî°3ùîØùîØùî®1ùîû‚ô°
‚°û‚†Ä‚†Ä‚†∏‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢≥‚¢Ä‚£†‚†Ä‚†Ä‚†Ä‚†â‚†â‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚°¥‚†û‚†Å‚†Ä‚†Ä‚†à‚†ì‚†¶‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚†û‚†Å‚†Ä                                     
‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†Ä‚†Å‚†Ä‚¢Ä‚£Ä‚£Ä‚°¥‚†ã‚¢ª‚°â‚†ô‚†æ‚°ü‚¢ø‚£Ö‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†ô‚†õ‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä
‚†ò‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚†û‚¢â‚£π‚£Ø‚£ç‚£ø‚†â‚†ü‚†Ä‚†Ä‚£∏‚†≥‚£Ñ‚°Ä‚†Ä‚†Ä‚†ô‚¢ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†à‚†ô‚†í‚†í‚†í‚†í‚†í‚†ö‚†ã‚†Å‚†Ä‚°¥‚†ã‚¢Ä‚°Ä‚¢†‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°æ‚†ã‚¢ª‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚¢∏‚°Ä‚†∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚¢†‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£á‚†Ä‚†Ä‚†â‚†ã‚†ª‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚£¥‚†û‚†ã‚†≥‚†∂‚†û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚†¶‚¢§‚†§‚†∂‚†ã‚†ô‚†≥‚£Ü‚£Ä‚£à‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
    """)


def run_command(command):
    try:
        subprocess.run(command, shell=True, check=True)
    except subprocess.CalledProcessError as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã '{command}': {e}")
        exit(1)

def cls():
    run_command("clear")
    print_ascii()

# ----

def count_photos_in_directory(directory):
    photo_extensions = ('.jpg', '.jpeg', '.png', '.gif', '.heic', '.thm', '.mp4', '.mov')  # –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    photo_count = 0
    total_size = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ–±—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞

    for root, dirs, files in os.walk(directory):
        for file in files:
            if file.lower().endswith(photo_extensions):
                photo_count += 1
                total_size += os.path.getsize(os.path.join(root, file))  # –°—É–º–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã

    return photo_count, total_size


def search_photos():
    connect_iphone()
    iphone_directory = '~/iphone'  # –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ñ–æ—Ç–æ

    if os.path.exists(os.path.expanduser(iphone_directory)):
        total_photos, total_size = count_photos_in_directory(os.path.expanduser(iphone_directory))
        print(f"–ù–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –Ω–∞–π–¥–µ–Ω–æ {total_photos} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.")
        print(f"–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {total_size / (1024 * 1024):.2f} –ú–ë.")
    else:
        print("–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ iPhone –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∏–ª–∏ –ø—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    deactivate_iphone()


def deactivate_iphone():
    run_command("fusermount -u ~/iphone")


def is_mounted(directory):
    result = subprocess.run(f"mount | grep {directory}", shell=True, stdout=subprocess.PIPE)
    return result.returncode == 0


def connect_iphone():
    if is_mounted("~/iphone"):
        run_command("fusermount -u ~/iphone")
    run_command("mkdir -p ~/iphone")
    run_command("ifuse ~/iphone")
    print("iPhone —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω.")


def copy_with_unique_name(src, dst, repeat_dir):
    """–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å—É—Ñ—Ñ–∏–∫—Å–∞, –µ—Å–ª–∏ —Ñ–∞–π–ª —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."""
    if not os.path.exists(dst):
        shutil.copy2(src, dst)
    else:
        # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤ –ø–∞–ø–∫—É –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Ñ–∞–π–ª–æ–≤
        shutil.copy2(src, os.path.join(repeat_dir, os.path.basename(src)))
        print(f"–§–∞–π–ª —Å —Ç–∞–∫–∏–º –∂–µ –∏–º–µ–Ω–µ–º –Ω–∞–π–¥–µ–Ω. –§–∞–π–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –ø–∞–ø–∫—É 'repeat': {os.path.basename(src)}")

def download_photos(file_type):
    connect_iphone()
    iphone_directory = '~/iphone'  # –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ñ–æ—Ç–æ
    download_directory = './downloaded_photos'  # –ü—É—Ç—å, –∫—É–¥–∞ –±—É–¥—É—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å—Å—è —Ñ–∞–π–ª—ã

    # –°–æ–∑–¥–∞–µ–º –≤—Å–µ –ø–æ–¥–∫–∞—Ç–∞–ª–æ–≥–∏ —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫
    subdirs = {
        'photos': os.path.join(download_directory, 'photos'),
        'videos': os.path.join(download_directory, 'videos'),
        'gifs': os.path.join(download_directory, 'gifs'),
        'others': os.path.join(download_directory, 'others'),
        'repeat': os.path.join(download_directory, 'repeat')  # –ü–∞–ø–∫–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Ñ–∞–π–ª–æ–≤
    }

    for subdir in subdirs.values():
        os.makedirs(subdir, exist_ok=True)  # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–∞–ª–æ–≥–∏ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    extensions = {
        'photos': ('.jpg', '.jpeg', '.png', '.heic'),
        'videos': ('.mp4', '.mov'),
        'gifs': ('.gif',),
    }

    if file_type == 'all':
        allowed_extensions = extensions['photos'] + extensions['videos'] + extensions['gifs']
    elif file_type == 'photos':
        allowed_extensions = extensions['photos']
    elif file_type == 'videos':
        allowed_extensions = extensions['videos']
    elif file_type == 'gifs':
        allowed_extensions = extensions['gifs']
    else:
        allowed_extensions = ()

    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    total_photos = sum(
        1 for root, dirs, files in os.walk(os.path.expanduser(iphone_directory))
        for file in files if any(file.lower().endswith(ext) for ext in allowed_extensions)
    )
    
    if total_photos == 0:
        print("–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.")
        deactivate_iphone()
        return

    print(f"–ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ {total_photos} —Ñ–∞–π–ª–æ–≤...")

    downloaded_photos = 0

    for root, dirs, files in os.walk(os.path.expanduser(iphone_directory)):
        for file in files:
            if file.lower().endswith(extensions['photos']):
                destination = os.path.join(subdirs['photos'], file)
            elif file.lower().endswith(extensions['videos']):
                destination = os.path.join(subdirs['videos'], file)
            elif file.lower().endswith(extensions['gifs']):
                destination = os.path.join(subdirs['gifs'], file)
            else:
                destination = os.path.join(subdirs['others'], file)

            copy_with_unique_name(os.path.join(root, file), destination, subdirs['repeat'])  # –ü–µ—Ä–µ–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–æ–≤
            downloaded_photos += 1
            progress_bar(downloaded_photos, total_photos)

    print(f"\n–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –°–∫–∞—á–∞–Ω–æ {downloaded_photos} —Ñ–∞–π–ª–æ–≤.")
    deactivate_iphone()



def progress_bar(current, total):
    bar_length = 50
    percent = (current / total)
    arrow = '‚ñà' * int(round(percent * bar_length)) + '-' * (bar_length - int(round(percent * bar_length)))
    print(f"\r[{arrow}] {current}/{total}", end='')


def soon():
    print("–§—É–Ω–∫—Ü–∏—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞.")


def main():
    print_ascii()
    while True:
        print(Fore.MAGENTA + """
            1) Search (–ø–æ–∏—Å–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π)
            2) Download (—Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏)
            3) Exit (–≤—ã—Ö–æ–¥)
              """)

        choice = input("")

        if choice == '1':
            search_photos()
        elif choice == '2':
            cls()
            print(Fore.CYAN + """
                1) –°–∫–∞—á–∞—Ç—å –≤—Å—ë (–≥–∏—Ñ–∫–∏, –≤–∏–¥–µ–æ, —Ñ–æ—Ç–æ)
                2) –°–∫–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ
                3) –°–∫–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ
                4) –ù–∞–∑–∞–¥
                  """)
            download_choice = input("")

            if download_choice == '1':
                download_photos('all')
            elif download_choice == '2':
                download_photos('photos')
            elif download_choice == '3':
                download_photos('videos')
            elif download_choice == '4':
                continue
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        elif choice == '3':
            print("–í—ã—Ö–æ–¥...")
            break
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == '__main__':
    main()
